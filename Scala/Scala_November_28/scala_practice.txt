

1. Write a Scala function to calculate the factorial of a given number.
2. Write a Scala function to check if a given number is prime.
3. Write a Scala function to calculate the sum of digits in a given number.
4. Write a Scala function to check if a given number is even.
5. Write a Scala function to check if a given number is a perfect square.
6. Write a Scala function to check if a given string is a palindrome.
7. Write a Scala function to reverse a given string.
8. Write a Scala program to count the number of vowels in a given string using if/else statements and pattern matching.
9. Write a Scala function to find the maximum element in an array.
10. Write a Scala function to check if a given list is sorted in ascending order.
11. Write a Scala function to calculate the power of a number
12. Write a Scala program to print the Fibonacci series up to a given number using a while loop.

package scalaPractice


import scala.io.StdIn._
import scala.collection.immutable._
import scala.util.control.Breaks.{break, breakable}




object MyArray{
    def calMax(x:Array[Int]):Int={
        var maxi=x(0);
        for(i<-x){
            maxi=i max maxi;
        }
        maxi
    }

    def isSorted(x:Array[Int]):Boolean={
        val end=x.length-2;
        for(i<-0 to(end)){
           if(x(i)>x(i+1))
               return false
        }
        true
    }
}

object function {

    def fact(n:Int):Int={
        if(n==0||n==1){
             1
        }
        else  fact(n-1)*n;
    }

    def checkPrime(n:Int=90):String={
        var b=true;
        breakable{
            for (i <- 2 to n) {
                if (n % i == 0 && i != n) {
                    b = false;
                    break;
                }
            }
        }

        if(!b){
            "Not prime"
        }else{
            "prime"
        }
    }

    def revers(s:String):String={
        var temp="";
        for(i<- 0 until(s.length)){
            temp=s.charAt(i)+temp;

        }
        return temp;
    }

    def calPower(x:Int,n:Int):Int={
        if(n==0)
            1
        else
            x*calPower(x,n-1);

    }
    def isPerfectSquare(i: Int):Boolean={
        var s=0;
        var e=i;
        var mid=0;
        while(s<=e){
            mid=s+(e-s)/2;
            if(mid*mid ==i)
                return true
            else if(mid*mid<i){
                s=mid+1
            }
            else{
                e=mid-1;
            }
        }
        return false
    }

    def isVowel(c: Char):Boolean=c.toLower match {
        case 'a'|'e'|'i'|'o'|'u'=>true
        case _=>false
    }

    def vowelCount(s:String):Int={
        var count=0;
        for(i<- 0 until(s.length)){
            if(isVowel(s.charAt(i))){
                count+=1;
            }
        }
        count;
    }

    def main(args: Array[String]): Unit = {


        val sumOfDigits=(x:Int)=>{
            var n=x;
            var sum=0;
            while (n!=0){
                sum+=n%10;
                n=n/10;
            }
            sum
        }



        val isPalindrome=(s:String)=>{
            val rev=s.reverse;
            if(s==rev)
                true
            else
                false
        }

        val isEven=(n:Int)=>n%2==0

        println("Enter value of n: ");
        var n=readInt();
        println(s"factorial of ${n} is: "+fact(n));
        println(s"is ${n} prime or not: "+checkPrime(n));
        println(s"sum of digit of ${n} is: "+sumOfDigits(n));
        println(s"is ${n} even or not: "+isEven(n));
        println(s"is ${n} perfect square or not: "+isPerfectSquare(35));


        println("Enter the string");
        val s=readLine();
        println(s"is ${s} palindrome or not: "+isPalindrome(s));
        println(s"reverse of ${s} is: "+revers(s));
        println(s"number of vowels present in ${s} are: "+vowelCount(s));

        var arr=Array(2,1,3,4,5);
        println(s"Maximum value in array is ${arr.mkString(",")}: "+MyArray.calMax(arr));
        println(s"is array ${arr.mkString(",")} sorted or not: "+MyArray.isSorted(arr));

        println("Enter positive Integer value for m and x: ")
        val m=readInt();
        var x=readInt();
        println(s"power(${m},${x}): "+calPower(m,x));


        println("Enter the number for fibonacci series: ");
        n=readInt();
        var f1=0;
        var f2=1;
        println("fibonacci Series: ");
        print(s"${f1} ${f2}");
        n=n-2;
        
        while(n!=0){
            print(s" ${f1+f2}");
            var temp=f1+f2;
            f1=f2;
            f2=temp;
            n-=1;
        }

    }
}
	
